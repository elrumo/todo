
/* Open Sans */
@import url('https://fonts.googleapis.com/css?family=Open+Sans:400,600,800');

/* Source Sans Pro */
@import url('https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,700,900');

/* IBM Plex Mono */
@import url('https://fonts.googleapis.com/css?family=IBM+Plex+Mono:400,500,500i,700');

/* Playfair Display*/
@import url('https://fonts.googleapis.com/css?family=Playfair+Display:400,700,700i,900');


body{
  margin: 0;
  border: 0;
  color: black;
  background-color: #319CF8;
  font-family: 'Open Sans', sans-serif;
  /* font-family: 'Source Sans Pro', sans-serif; */
  /* font-family: 'IBM Plex Mono', monospace; */
  /* font-family: 'Playfair Display', serif; */
}

#particles-js{
  position: fixed;
  height: 100%;
  width: 100%;
  background: #319CF8;
}

button{
  outline: none;
  border: none;
  cursor: pointer;
}

.circlesWrapper{
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  overflow: hidden;
}

.circle{
  position: absolute;
  border-radius: 100%;
  opacity: 0.1;
  background: #0A59C3;
}

 /* Circles */
 #circle1{
    top: -12%;
    left: -2%;
    height: 290px;
    width: 290px;
  }

  #circle2{
    top: -25%;
    left: 55%;
    height: 590px;
    width: 590px;
  }

  #circle3{
    top: 10%;
    left: 20%;
    height: 70px;
    width: 70px;
  }

  #circle4{
    bottom: -32%;
    left: -8%;
    height: 550px;
    width: 550px;
  }

  #circle5{
    top: 55%;
    left: 50%;
    height: 300px;
    width: 300px;
  }

  #circle6{
    bottom: 10%;
    left: 25%;
    height: 120px;
    width: 120px;
  }

  #circle7{
    bottom: -30%;
    right: -15%;
    height: 600px;
    width: 600px;
  }

.cardWrapper{
  position: absolute;
  z-index: 2;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 25%;
  max-width: 380px;
  min-width: 300px;
  max-height: 90vh;
}

.card{
  position: relative;
  width: 100%;
  border-radius: 10px;
  background: #FFFFFF;
  height: 65px;
  transition: 0.1s;
  margin-bottom: 35px;
}

.card:focus-within{
  box-shadow: 0 17px 20px -13px rgba(0,0,0,0.50);
}

.card:hover {
  box-shadow: 0 17px 20px -13px rgba(0,0,0,0.50);
}

.newCard {
  position: relative;
  left: -50%;
  transform: translate(50%, 0%);
  width: 60px;
  height: 60px;
  opacity: 0.5;
  float: right;
}

.newCard:hover{
  box-shadow: 0 0px 0px 0px rgba(0,0,0,0);
  opacity: 1;
}

.plusWrapper {
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
}

.plus{
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  display: block;
  width: 3px;
  height: 15px;
  border-radius: 5px;
  background: #319CF8;
}

.plusH{
  position: relative;
  transform: rotate(90deg) translate(-50%, 10%);
}

#ogCard{
  opacity: 0.5;
}

#ogCard:focus-within{
  opacity: 1;
  box-shadow: 0 17px 20px -13px rgba(0,0,0,0.50);
}

#ogCard:focus-within button{
  opacity: 1;
}

.textField{
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  width: 80%;
  margin-left: 20px;
  height: 90%;
  font-size: 24px;
  font-weight: 600;
  border: none;
  outline: none;
}

.textField:focus{
  border: none;
}

.container{
  display: block;
  position: absolute;
  cursor: pointer;
  font-size: 22px;
 -webkit-user-select: none;
 -moz-user-select: none;
 -ms-user-select: none;
  user-select: none;
  height: 25px;
  width: 25px;
  top: 50%;
  right: 20px;
  transform: translateY(-50%);
}

.container input {
    position: absolute;
    opacity: 0;
    cursor: pointer;
    height: 0;
    width: 0;
    top: 50%;
    transform: translateY(-50%);
    border-radius: 100%;
}

/* Create a custom checkbox */
.checkmark {
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: 100%;
    background-color: #eee;
    top: 50%;
    transform: translateY(-50%);
    border-radius: 100%;
}

/* On mouse-over, add a grey background color */
.container:hover input ~ .checkmark {
    background-color: #ccc;
}

/* When the checkbox is checked, add a blue background */
.container input:checked ~ .checkmark {
    background-color: #2196F3;
}

/* Create the checkmark/indicator (hidden when not checked) */
.checkmark:after {
    content: "";
    position: absolute;
    display: none;
}

/* Show the checkmark when checked */
.container input:checked ~ .checkmark:after {
    display: block;
}

/* Style the checkmark/indicator */
.container .checkmark:after {
    left: 9px;
    top: 5px;
    width: 5px;
    height: 10px;
    border: solid white;
    border-width: 0 3px 3px 0;
    -webkit-transform: rotate(45deg);
    -ms-transform: rotate(45deg);
    transform: rotate(45deg);
}
